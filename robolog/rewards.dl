.decl mt_incr(t0: float, t1: float, v0: float, v1: float)
.output mt_incr

.decl mt_decr(t0: float, t1: float, v0: float, v1: float)
.output mt_decr

//.decl cycle(t0: float, t1: float, v0: float, v1:float)
//.output cycle

.decl state(t: float, s0: float, s1: float, s2: float, s3: float)
.input state

.decl reward(t: float, r: float)
.output reward

mt_incr(t0, t1, a, b) :- t1 = t0 + 1, state(t0,a,_,_,_), state(t1,b,_,_,_), a < b.
mt_incr(t0, t2, a, c) :- mt_incr(t0,t1,a,b), mt_incr(t1,t2,b,c).
mt_decr(t0, t1, a, b) :- t1 = t0 + 1, state(t0,a,_,_,_), state(t1,b,_,_,_), a > b.
mt_decr(t0, t2, a, c) :- mt_decr(t0,t1,a,b), mt_decr(t1,t2,b,c).

reward(t0, 1) :- mt_decr(t0, t1, _, _), t1 - t0 >= 0.
reward(t0, 2) :- mt_incr(t0, t1, _, _), t1 - t0 >= 0.

// cycle(t0, t2, a, b) :- mt_incr(t0, t1, a, b), mt_decr(t1, t2, b, a).

